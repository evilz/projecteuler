using System.Collections.Generic;
using System.Linq;

namespace Projecteuler
{
    class Problem2 : IProblem
    {

        #region IProblem implementation

        public long Resolve()
        {
            return Fibonacci(1, 2)
                .TakeWhile(l => l < 4000000)
                .Where(l => l % 2 == 0)
                .Sum();
        }

        public int Ref
        {
            get
            {
                return 2;
            }
        }

        public string Description
        {
            get
            {
                return "Each new term in the Fibonacci sequence is generated by adding the previous two terms.\nBy starting with 1 and 2, the first 10 terms will be:1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n";
            }
        }

        #endregion

        private IEnumerable<long> Fibonacci(long a, long b)
        {
            yield return a;
            yield return b;
            while (true)
            {
                long c = a + b;
                a = b;
                b = c;
                yield return c;
            }
        }
    }
}
